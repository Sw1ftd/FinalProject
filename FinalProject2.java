/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finalproject2;

/**
 *
 * @author 807514
 */
public class FinalProject2 extends javax.swing.JFrame {
    int start = 0;
    int difficulty = (int) (Math.random() * 10 + 1);
    int number = 0;
    int sum = 0;
    int grid[] = new int[25];
    int addUp = 100;
    int score = 0;
    
    /**
     * Creates new form FinalProject2
     */
    public FinalProject2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        gridBox19 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        gridBox20 = new javax.swing.JButton();
        scoreBox = new javax.swing.JLabel();
        gridBox21 = new javax.swing.JButton();
        gridBox22 = new javax.swing.JButton();
        gridBox23 = new javax.swing.JButton();
        gridBox24 = new javax.swing.JButton();
        gridBox25 = new javax.swing.JButton();
        column2 = new javax.swing.JLabel();
        column3 = new javax.swing.JLabel();
        column4 = new javax.swing.JLabel();
        gridBox8 = new javax.swing.JButton();
        column5 = new javax.swing.JLabel();
        gridBox9 = new javax.swing.JButton();
        rowBox5 = new javax.swing.JLabel();
        gridBox10 = new javax.swing.JButton();
        rowBox4 = new javax.swing.JLabel();
        gridBox11 = new javax.swing.JButton();
        rowBox3 = new javax.swing.JLabel();
        gridBox12 = new javax.swing.JButton();
        rowBox2 = new javax.swing.JLabel();
        gridBox13 = new javax.swing.JButton();
        rowBox1 = new javax.swing.JLabel();
        gridBox14 = new javax.swing.JButton();
        easy = new javax.swing.JToggleButton();
        gridBox15 = new javax.swing.JButton();
        medium = new javax.swing.JToggleButton();
        gridBox16 = new javax.swing.JButton();
        column1 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        gridBox1 = new javax.swing.JButton();
        gridBox2 = new javax.swing.JButton();
        gridBox3 = new javax.swing.JButton();
        gridBox4 = new javax.swing.JButton();
        gridBox5 = new javax.swing.JButton();
        gridBox6 = new javax.swing.JButton();
        gridBox7 = new javax.swing.JButton();
        hard = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        gridBox17 = new javax.swing.JButton();
        numberBox = new javax.swing.JLabel();
        gridBox18 = new javax.swing.JButton();
        num = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        gridBox19.setBackground(new java.awt.Color(0, 0, 0));
        gridBox19.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox19.setForeground(new java.awt.Color(255, 255, 255));
        gridBox19.setText("0");
        gridBox19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox19ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 255));
        jLabel4.setText("Score:");
        jLabel4.setOpaque(true);

        gridBox20.setBackground(new java.awt.Color(0, 0, 0));
        gridBox20.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox20.setForeground(new java.awt.Color(255, 255, 255));
        gridBox20.setText("0");
        gridBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox20ActionPerformed(evt);
            }
        });

        scoreBox.setBackground(new java.awt.Color(0, 0, 0));
        scoreBox.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        scoreBox.setForeground(new java.awt.Color(102, 102, 255));
        scoreBox.setText("0");
        scoreBox.setOpaque(true);

        gridBox21.setBackground(new java.awt.Color(0, 0, 0));
        gridBox21.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox21.setForeground(new java.awt.Color(255, 255, 255));
        gridBox21.setText("0");
        gridBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox21ActionPerformed(evt);
            }
        });

        gridBox22.setBackground(new java.awt.Color(0, 0, 0));
        gridBox22.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox22.setForeground(new java.awt.Color(255, 255, 255));
        gridBox22.setText("0");
        gridBox22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox22ActionPerformed(evt);
            }
        });

        gridBox23.setBackground(new java.awt.Color(0, 0, 0));
        gridBox23.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox23.setForeground(new java.awt.Color(255, 255, 255));
        gridBox23.setText("0");
        gridBox23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox23ActionPerformed(evt);
            }
        });

        gridBox24.setBackground(new java.awt.Color(0, 0, 0));
        gridBox24.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox24.setForeground(new java.awt.Color(255, 255, 255));
        gridBox24.setText("0");
        gridBox24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox24ActionPerformed(evt);
            }
        });

        gridBox25.setBackground(new java.awt.Color(0, 0, 0));
        gridBox25.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox25.setForeground(new java.awt.Color(255, 255, 255));
        gridBox25.setText("0");
        gridBox25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox25ActionPerformed(evt);
            }
        });

        column2.setBackground(new java.awt.Color(0, 0, 0));
        column2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        column2.setForeground(new java.awt.Color(255, 255, 255));
        column2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        column2.setText("0");
        column2.setOpaque(true);

        column3.setBackground(new java.awt.Color(0, 0, 0));
        column3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        column3.setForeground(new java.awt.Color(255, 255, 255));
        column3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        column3.setText("0");
        column3.setOpaque(true);

        column4.setBackground(new java.awt.Color(0, 0, 0));
        column4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        column4.setForeground(new java.awt.Color(255, 255, 255));
        column4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        column4.setText("0");
        column4.setOpaque(true);

        gridBox8.setBackground(new java.awt.Color(0, 0, 0));
        gridBox8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox8.setForeground(new java.awt.Color(255, 255, 255));
        gridBox8.setText("0");
        gridBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox8ActionPerformed(evt);
            }
        });

        column5.setBackground(new java.awt.Color(0, 0, 0));
        column5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        column5.setForeground(new java.awt.Color(255, 255, 255));
        column5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        column5.setText("0");
        column5.setOpaque(true);

        gridBox9.setBackground(new java.awt.Color(0, 0, 0));
        gridBox9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox9.setForeground(new java.awt.Color(255, 255, 255));
        gridBox9.setText("0");
        gridBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox9ActionPerformed(evt);
            }
        });

        rowBox5.setBackground(new java.awt.Color(0, 0, 0));
        rowBox5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        rowBox5.setForeground(new java.awt.Color(255, 255, 255));
        rowBox5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rowBox5.setText("0");
        rowBox5.setOpaque(true);

        gridBox10.setBackground(new java.awt.Color(0, 0, 0));
        gridBox10.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox10.setForeground(new java.awt.Color(255, 255, 255));
        gridBox10.setText("0");
        gridBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox10ActionPerformed(evt);
            }
        });

        rowBox4.setBackground(new java.awt.Color(0, 0, 0));
        rowBox4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        rowBox4.setForeground(new java.awt.Color(255, 255, 255));
        rowBox4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rowBox4.setText("0");
        rowBox4.setOpaque(true);

        gridBox11.setBackground(new java.awt.Color(0, 0, 0));
        gridBox11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox11.setForeground(new java.awt.Color(255, 255, 255));
        gridBox11.setText("0");
        gridBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox11ActionPerformed(evt);
            }
        });

        rowBox3.setBackground(new java.awt.Color(0, 0, 0));
        rowBox3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        rowBox3.setForeground(new java.awt.Color(255, 255, 255));
        rowBox3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rowBox3.setText("0");
        rowBox3.setOpaque(true);

        gridBox12.setBackground(new java.awt.Color(0, 0, 0));
        gridBox12.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox12.setForeground(new java.awt.Color(255, 255, 255));
        gridBox12.setText("0");
        gridBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox12ActionPerformed(evt);
            }
        });

        rowBox2.setBackground(new java.awt.Color(0, 0, 0));
        rowBox2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        rowBox2.setForeground(new java.awt.Color(255, 255, 255));
        rowBox2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rowBox2.setText("0");
        rowBox2.setOpaque(true);

        gridBox13.setBackground(new java.awt.Color(0, 0, 0));
        gridBox13.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox13.setForeground(new java.awt.Color(255, 255, 255));
        gridBox13.setText("0");
        gridBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox13ActionPerformed(evt);
            }
        });

        rowBox1.setBackground(new java.awt.Color(0, 0, 0));
        rowBox1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        rowBox1.setForeground(new java.awt.Color(255, 255, 255));
        rowBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rowBox1.setText("0");
        rowBox1.setOpaque(true);

        gridBox14.setBackground(new java.awt.Color(0, 0, 0));
        gridBox14.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox14.setForeground(new java.awt.Color(255, 255, 255));
        gridBox14.setText("0");
        gridBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox14ActionPerformed(evt);
            }
        });

        easy.setBackground(new java.awt.Color(0, 0, 0));
        easy.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        easy.setForeground(new java.awt.Color(51, 153, 0));
        easy.setText("Easy.");
        easy.setOpaque(true);
        easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyActionPerformed(evt);
            }
        });

        gridBox15.setBackground(new java.awt.Color(0, 0, 0));
        gridBox15.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox15.setForeground(new java.awt.Color(255, 255, 255));
        gridBox15.setText("0");
        gridBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox15ActionPerformed(evt);
            }
        });

        medium.setBackground(new java.awt.Color(0, 0, 0));
        medium.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        medium.setForeground(new java.awt.Color(255, 255, 51));
        medium.setText("Medium.");
        medium.setOpaque(true);
        medium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumActionPerformed(evt);
            }
        });

        gridBox16.setBackground(new java.awt.Color(0, 0, 0));
        gridBox16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox16.setForeground(new java.awt.Color(255, 255, 255));
        gridBox16.setText("0");
        gridBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox16ActionPerformed(evt);
            }
        });

        column1.setBackground(new java.awt.Color(0, 0, 0));
        column1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        column1.setForeground(new java.awt.Color(255, 255, 255));
        column1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        column1.setText("0");
        column1.setOpaque(true);

        title.setBackground(new java.awt.Color(0, 0, 0));
        title.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("ADD UP TO");
        title.setOpaque(true);

        gridBox1.setBackground(new java.awt.Color(0, 0, 0));
        gridBox1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox1.setForeground(new java.awt.Color(255, 255, 255));
        gridBox1.setText("0");
        gridBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox1ActionPerformed(evt);
            }
        });

        gridBox2.setBackground(new java.awt.Color(0, 0, 0));
        gridBox2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox2.setForeground(new java.awt.Color(255, 255, 255));
        gridBox2.setText("0");
        gridBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox2ActionPerformed(evt);
            }
        });

        gridBox3.setBackground(new java.awt.Color(0, 0, 0));
        gridBox3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox3.setForeground(new java.awt.Color(255, 255, 255));
        gridBox3.setText("0");
        gridBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox3ActionPerformed(evt);
            }
        });

        gridBox4.setBackground(new java.awt.Color(0, 0, 0));
        gridBox4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox4.setForeground(new java.awt.Color(255, 255, 255));
        gridBox4.setText("0");
        gridBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox4ActionPerformed(evt);
            }
        });

        gridBox5.setBackground(new java.awt.Color(0, 0, 0));
        gridBox5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox5.setForeground(new java.awt.Color(255, 255, 255));
        gridBox5.setText("0");
        gridBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox5ActionPerformed(evt);
            }
        });

        gridBox6.setBackground(new java.awt.Color(0, 0, 0));
        gridBox6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox6.setForeground(new java.awt.Color(255, 255, 255));
        gridBox6.setText("0");
        gridBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox6ActionPerformed(evt);
            }
        });

        gridBox7.setBackground(new java.awt.Color(0, 0, 0));
        gridBox7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox7.setForeground(new java.awt.Color(255, 255, 255));
        gridBox7.setText("0");
        gridBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox7ActionPerformed(evt);
            }
        });

        hard.setBackground(new java.awt.Color(0, 0, 0));
        hard.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        hard.setForeground(new java.awt.Color(255, 0, 0));
        hard.setText("Hard.");
        hard.setOpaque(true);
        hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Number:");
        jLabel3.setOpaque(true);

        gridBox17.setBackground(new java.awt.Color(0, 0, 0));
        gridBox17.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox17.setForeground(new java.awt.Color(255, 255, 255));
        gridBox17.setText("0");
        gridBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox17ActionPerformed(evt);
            }
        });

        numberBox.setBackground(new java.awt.Color(0, 0, 0));
        numberBox.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        numberBox.setForeground(new java.awt.Color(255, 255, 255));
        numberBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberBox.setText("0");
        numberBox.setOpaque(true);

        gridBox18.setBackground(new java.awt.Color(0, 0, 0));
        gridBox18.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        gridBox18.setForeground(new java.awt.Color(255, 255, 255));
        gridBox18.setText("0");
        gridBox18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridBox18ActionPerformed(evt);
            }
        });

        num.setBackground(new java.awt.Color(0, 0, 0));
        num.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        num.setForeground(new java.awt.Color(255, 255, 255));
        num.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        num.setText("100");
        num.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(easy, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scoreBox))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(medium, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hard, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(gridBox11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox15, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rowBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(gridBox16, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox17, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox18, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox19, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox20, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rowBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(gridBox21, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox22, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gridBox23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox24, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(gridBox25, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rowBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(gridBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gridBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gridBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gridBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gridBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rowBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gridBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(column1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gridBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(column2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gridBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(column3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(gridBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(gridBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(column4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(column5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rowBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title)
                    .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(column1)
                    .addComponent(column2)
                    .addComponent(column3)
                    .addComponent(column4)
                    .addComponent(column5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gridBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rowBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gridBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rowBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gridBox11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox14, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rowBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gridBox16, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox17, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox18, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox19, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox20, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rowBox4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gridBox21, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox22, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox23, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox24, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridBox25, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rowBox5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addComponent(numberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medium, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(easy, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hard, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreBox)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gridBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox1ActionPerformed
        if( gridBox1.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox1.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox1ActionPerformed
    private void easyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyActionPerformed
        numberBox.setText(String.format("%d", difficulty));
        addUp = 25;
        num.setText("25");
        medium.setSelected(false);
        hard.setSelected(false);
    }//GEN-LAST:event_easyActionPerformed
    private void mediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumActionPerformed
        numberBox.setText(String.format("%d", difficulty));
        addUp = 20;
        num.setText("20");
        easy.setSelected(false);
        hard.setSelected(false);
    }//GEN-LAST:event_mediumActionPerformed
    private void hardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardActionPerformed
        numberBox.setText(String.format("%d", difficulty));
        addUp = 15;
        num.setText("15");
        easy.setSelected(false);
        medium.setSelected(false);
    }//GEN-LAST:event_hardActionPerformed
    private void gridBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox2ActionPerformed
        if( gridBox2.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox2.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox2ActionPerformed
    private void gridBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox3ActionPerformed
        if( gridBox3.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox3.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox3ActionPerformed
    private void gridBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox4ActionPerformed
        if( gridBox4.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox4.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox4ActionPerformed
    private void gridBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox5ActionPerformed
        if( gridBox5.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox5.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox5ActionPerformed
    private void gridBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox6ActionPerformed
        if( gridBox6.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox6.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox6ActionPerformed
    private void gridBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox7ActionPerformed
        if( gridBox7.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox7.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox7ActionPerformed
    private void gridBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox8ActionPerformed
        if( gridBox8.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox8.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox8ActionPerformed
    private void gridBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox9ActionPerformed
        if( gridBox9.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox9.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox9ActionPerformed
    private void gridBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox10ActionPerformed
        if( gridBox10.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox10.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox10ActionPerformed
    private void gridBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox11ActionPerformed
        if( gridBox11.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox11.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox11ActionPerformed
    private void gridBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox12ActionPerformed
        if( gridBox12.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox12.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox12ActionPerformed
    private void gridBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox13ActionPerformed
        if( gridBox13.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox13.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox13ActionPerformed
    private void gridBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox14ActionPerformed
        if( gridBox14.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox14.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox14ActionPerformed
    private void gridBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox15ActionPerformed
        if( gridBox15.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox15.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox15ActionPerformed
    private void gridBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox16ActionPerformed
        if( gridBox16.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox16.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox16ActionPerformed
    private void gridBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox17ActionPerformed
        if( gridBox17.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox17.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox17ActionPerformed
    private void gridBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox18ActionPerformed
        if( gridBox18.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox18.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox18ActionPerformed
    private void gridBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox19ActionPerformed
        if( gridBox19.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox19.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox19ActionPerformed
    private void gridBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox20ActionPerformed
        if( gridBox20.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox20.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox20ActionPerformed
    private void gridBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox21ActionPerformed
        if( gridBox21.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox21.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox21ActionPerformed
    private void gridBox22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox22ActionPerformed
        if( gridBox22.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox22.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox22ActionPerformed
    private void gridBox23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox23ActionPerformed
        if( gridBox23.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox23.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox23ActionPerformed
    private void gridBox24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox24ActionPerformed
        if( gridBox24.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox24.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox24ActionPerformed
    private void gridBox25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridBox25ActionPerformed
        if( gridBox25.getText().equals("0")){
            number = Integer.parseInt(numberBox.getText());
            gridBox25.setText(String.format("%d", number));
            numberBox.setText(String.format("%d", difficulty));
            score();
            columnsnrows();
            score();
        }
    }//GEN-LAST:event_gridBox25ActionPerformed
    public void columnsnrows(){
        
        grid[0] = Integer.parseInt(gridBox1.getText());
        grid[1] = Integer.parseInt(gridBox2.getText());
        grid[2] = Integer.parseInt(gridBox3.getText());
        grid[3] = Integer.parseInt(gridBox4.getText());
        grid[4] = Integer.parseInt(gridBox5.getText());
        grid[5] = Integer.parseInt(gridBox6.getText());
        grid[6] = Integer.parseInt(gridBox7.getText());
        grid[7] = Integer.parseInt(gridBox8.getText());
        grid[8] = Integer.parseInt(gridBox9.getText());
        grid[9] = Integer.parseInt(gridBox10.getText());
        grid[10] = Integer.parseInt(gridBox11.getText());
        grid[11] = Integer.parseInt(gridBox12.getText());
        grid[12] = Integer.parseInt(gridBox13.getText());
        grid[13] = Integer.parseInt(gridBox14.getText());
        grid[14] = Integer.parseInt(gridBox15.getText());
        grid[15] = Integer.parseInt(gridBox16.getText());
        grid[16] = Integer.parseInt(gridBox17.getText());
        grid[17] = Integer.parseInt(gridBox18.getText());
        grid[18] = Integer.parseInt(gridBox19.getText());
        grid[19] = Integer.parseInt(gridBox20.getText());
        grid[20] = Integer.parseInt(gridBox21.getText());
        grid[21] = Integer.parseInt(gridBox22.getText());
        grid[22] = Integer.parseInt(gridBox23.getText());
        grid[23] = Integer.parseInt(gridBox24.getText());
        grid[24] = Integer.parseInt(gridBox25.getText());
        
        int q = 0;
        int y = 5;
        for(int i = 0; i < 5; i++) {
            sum = 0;
            for( int p = q; p < y; p++) {
                sum += grid[p];
            }
            if( i == 0 ){
                rowBox1.setText(String.format("%d", sum));
            }
            if( i == 1 ){
                rowBox2.setText(String.format("%d", sum));
            }
            if( i == 2 ){
                rowBox3.setText(String.format("%d", sum));
            }
            if( i == 3 ){
                rowBox4.setText(String.format("%d", sum));
            }
            if( i == 4 ){
                rowBox5.setText(String.format("%d", sum));
            }
            q += 5;
            y += 5;
        }
        
        for(int i = 0; i < 5; i++) {
            sum = 0;
            q = i;
            for( int p = q; p < 25; p+=5) {
                sum += grid[p];
            }
            if( i == 0 ){
                column1.setText(String.format("%d", sum));
            }
            if( i == 1 ){
                column2.setText(String.format("%d", sum));
            }
            if( i == 2 ){
                column3.setText(String.format("%d", sum));
            }
            if( i == 3 ){
                column4.setText(String.format("%d", sum));
            }
            if( i == 4 ){
                column5.setText(String.format("%d", sum));
            }
        }
        difficulty = (int) (Math.random() * 10 + 1);
        numberBox.setText(String.format("%d", difficulty));
        if( grid[0] > 0 && grid[1] > 0 && grid[2] > 0 && grid[3] > 0 && grid[4] > 0 && grid[5] > 0 && grid[6] > 0 && grid[7] > 0 && grid[8] > 0 && grid[9] > 0 && grid[10] > 0 && grid[11] > 0 && grid[12] > 0 && grid[13] > 0 && grid[14] > 0 && grid[15] > 0 && grid[16] > 0 && grid[17] > 0 && grid[18] > 0 && grid[19] > 0 && grid[20] > 0 && grid[21] > 0 && grid[22] > 0 && grid[23] > 0 && grid[24] > 0 ) {
           title.setText("Game Over");
           num.setText("");
        }
    }
    public void score() {
        if( Integer.parseInt(rowBox1.getText()) == addUp ){
            rowBox1.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox1.setText(String.format("%d", 0));
            gridBox2.setText(String.format("%d", 0));
            gridBox3.setText(String.format("%d", 0));
            gridBox4.setText(String.format("%d", 0));
            gridBox5.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(rowBox2.getText()) == addUp ){
            rowBox2.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox6.setText(String.format("%d", 0));
            gridBox7.setText(String.format("%d", 0));
            gridBox8.setText(String.format("%d", 0));
            gridBox9.setText(String.format("%d", 0));
            gridBox10.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(rowBox3.getText()) == addUp ){
            rowBox3.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox11.setText(String.format("%d", 0));
            gridBox12.setText(String.format("%d", 0));
            gridBox13.setText(String.format("%d", 0));
            gridBox14.setText(String.format("%d", 0));
            gridBox15.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(rowBox4.getText()) == addUp ){
            rowBox4.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox16.setText(String.format("%d", 0));
            gridBox17.setText(String.format("%d", 0));
            gridBox18.setText(String.format("%d", 0));
            gridBox19.setText(String.format("%d", 0));
            gridBox20.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(rowBox5.getText()) == addUp ){
            rowBox5.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox21.setText(String.format("%d", 0));
            gridBox22.setText(String.format("%d", 0));
            gridBox23.setText(String.format("%d", 0));
            gridBox24.setText(String.format("%d", 0));
            gridBox25.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(column1.getText()) == addUp ){
            column1.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox1.setText(String.format("%d", 0));
            gridBox6.setText(String.format("%d", 0));
            gridBox11.setText(String.format("%d", 0));
            gridBox16.setText(String.format("%d", 0));
            gridBox21.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(column2.getText()) == addUp ){
            column2.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox1.setText(String.format("%d", 0));
            gridBox7.setText(String.format("%d", 0));
            gridBox12.setText(String.format("%d", 0));
            gridBox17.setText(String.format("%d", 0));
            gridBox22.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(column3.getText()) == addUp ){
            column3.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox3.setText(String.format("%d", 0));
            gridBox8.setText(String.format("%d", 0));
            gridBox13.setText(String.format("%d", 0));
            gridBox18.setText(String.format("%d", 0));
            gridBox23.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(column4.getText()) == addUp ){
            column4.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox4.setText(String.format("%d", 0));
            gridBox9.setText(String.format("%d", 0));
            gridBox14.setText(String.format("%d", 0));
            gridBox19.setText(String.format("%d", 0));
            gridBox24.setText(String.format("%d", 0));
            columnsnrows();
        }
        if( Integer.parseInt(column5.getText()) == addUp ){
            column5.setText(String.format("%d", 0));
            score += addUp;
            scoreBox.setText(String.format("%d", score));
            gridBox5.setText(String.format("%d", 0));
            gridBox10.setText(String.format("%d", 0));
            gridBox15.setText(String.format("%d", 0));
            gridBox20.setText(String.format("%d", 0));
            gridBox25.setText(String.format("%d", 0));
            columnsnrows();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinalProject2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinalProject2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinalProject2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinalProject2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinalProject2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel column1;
    private javax.swing.JLabel column2;
    private javax.swing.JLabel column3;
    private javax.swing.JLabel column4;
    private javax.swing.JLabel column5;
    private javax.swing.JToggleButton easy;
    private javax.swing.JButton gridBox1;
    private javax.swing.JButton gridBox10;
    private javax.swing.JButton gridBox11;
    private javax.swing.JButton gridBox12;
    private javax.swing.JButton gridBox13;
    private javax.swing.JButton gridBox14;
    private javax.swing.JButton gridBox15;
    private javax.swing.JButton gridBox16;
    private javax.swing.JButton gridBox17;
    private javax.swing.JButton gridBox18;
    private javax.swing.JButton gridBox19;
    private javax.swing.JButton gridBox2;
    private javax.swing.JButton gridBox20;
    private javax.swing.JButton gridBox21;
    private javax.swing.JButton gridBox22;
    private javax.swing.JButton gridBox23;
    private javax.swing.JButton gridBox24;
    private javax.swing.JButton gridBox25;
    private javax.swing.JButton gridBox3;
    private javax.swing.JButton gridBox4;
    private javax.swing.JButton gridBox5;
    private javax.swing.JButton gridBox6;
    private javax.swing.JButton gridBox7;
    private javax.swing.JButton gridBox8;
    private javax.swing.JButton gridBox9;
    private javax.swing.JToggleButton hard;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton medium;
    private javax.swing.JLabel num;
    private javax.swing.JLabel numberBox;
    private javax.swing.JLabel rowBox1;
    private javax.swing.JLabel rowBox2;
    private javax.swing.JLabel rowBox3;
    private javax.swing.JLabel rowBox4;
    private javax.swing.JLabel rowBox5;
    private javax.swing.JLabel scoreBox;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
